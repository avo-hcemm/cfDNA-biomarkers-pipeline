<?xml version="1.0" encoding="UTF-8"?>
<tool id="module1" name="Module 1" version="2.6.5">
    <description>Run preprocessing with user inputs</description>

    <requirements>
        <!-- Container -->
        <container type="docker">avohcemm/biomarkersearch-mod1to6:galaxytool_2</container>
        <!-- Explicit Conda dependencies -->
    <requirement type="package" version="0.11.9">fastqc</requirement>
    <requirement type="package" version="1.11">multiqc</requirement>
    <requirement type="package" version="0.39">trimmomatic</requirement>
    <requirement type="package" version="2.5.1">bowtie2</requirement>
    <requirement type="package" version="1.20.0">samtools</requirement>
    <requirement type="package" version="2.27.4">picard</requirement>
    </requirements>

    <environment_variables>
        <environment_variable name="output_subdir">module2to6/samples</environment_variable>
        <environment_variable name="genome_index_name">null</environment_variable>
    </environment_variables>

    <command><![CDATA[
    mkdir -p working_dir/genome_index_path "\$output_subdir" > debug_files_upload.txt 2>&1 || echo "mkdir failed" >> debug_files_upload.txt &&

    cp "${pathtodata}" working_dir/input.tar.gz 2>> debug_files_upload.txt &&
    cp "${genomeindextar}" working_dir/genome_index_path/genome.tar.gz 2>> debug_files_upload.txt &&
    cp "${adapterfile}" working_dir/adapter.fasta 2>> debug_files_upload.txt &&

    { tar --strip-components=1 -xzf working_dir/input.tar.gz -C working_dir 2>> debug_files_upload.txt &&
    echo "Data extraction succeeded" >> debug_files_upload.txt; }|| { echo "Data extraction failed" >> debug_files_upload.txt; } &&
    { tar -xzf working_dir/genome_index_path/genome.tar.gz -C working_dir/genome_index_path 2>> debug_files_upload.txt &&
    echo "Genome index extraction succeeded" >> debug_files_upload.txt; }|| { echo "Genome index extraction failed" >> debug_files_upload.txt; } &&

    genome_index_name=`basename \`find working_dir/genome_index_path -name "*.rev.1.bt2" ! -name "._*" | head -n1\` .rev.1.bt2` &&
    genome_index_name="working_dir/genome_index_path/\$genome_index_name" &&
    echo "genome_index_name: \$genome_index_name" >> debug_files_upload.txt &&

    echo "Command: $__tool_directory__/reads_preprocessing.sh -o \$output_subdir working_dir ${datasubdir} working_dir/adapter.fasta \$genome_index_name " >> debug_files_upload.txt &&
    bash $__tool_directory__/reads_preprocessing.sh -o "\$output_subdir" working_dir "${datasubdir}" working_dir/adapter.fasta "\$genome_index_name" >> log.txt 2>&1 &&
    echo "\$output_subdir" > output_manifest.txt

    ]]></command>

    <inputs>
        <param name="pathtodata" type="data" format="tar.gz" label="Compressed Data Directory (.tar.gz)" />
        <param name="datasubdir" type="text" label="Data Subdirectory" help="Subdirectory within the data folder (e.g., 'test_batch2025')." optional="false"/>
        <param name="genomeindextar" type="data" format="tar.gz" label="Genome index (Bowtie2)" />
        <param name="adapterfile" type="data" format="fasta" label="Adapter File" help="Upload adapter FASTA file for trimming." />
    </inputs>

    <outputs>
        <!-- At least one guaranteed output -->
        <data name="debug_output" format="txt" label="Debug Output Module1" from_work_dir="debug_files_upload.txt"/>
        <data name="script_output" format="txt" label="Log" from_work_dir="log.txt"/>
        <data name="output_manifest" format="txt" label="Manifest of path with output files" from_work_dir="output_manifest.txt"/>
    </outputs>

    <help><![CDATA[
This tool extracts your input text message and writes a debug log with the executed command and extracted contents.
    ]]></help>
</tool>
