<?xml version="1.0" encoding="UTF-8"?>
<tool id="module2to6" name="Modules 2–6" version="1.7.2">
  <description>Run biomarker discovery (modules 2–6) per chromosome - complete</description>

   <requirements>
    <container type="docker">avohcemm/biomarkersearch-mod1to6:galaxytool_2</container>
  </requirements>

  <command detect_errors="exit_code"><![CDATA[
    mkdir -p "working_dir/samples/${species}" working_dir/jars working_dir/config "working_dir/input/${species}" "working_dir/genome/${species}/hg38" working_dir/python &&

    echo "subfolders creation inside working directory:" > debug_files_upload.txt &&
    ls -lh working_dir >> debug_files_upload.txt &&

    cp "${sample_tarball}" working_dir/samplesdata.tar.gz 2>> debug_files_upload.txt &&
    { tar --strip-components=1 --exclude='._*' -xzf working_dir/samplesdata.tar.gz -C "working_dir/samples/${species}" 2>> debug_files_upload.txt &&
    echo "Samples bam files extraction succeeded" >> debug_files_upload.txt; } || { echo "Samples bam files extraction failed" >> debug_files_upload.txt; } &&

    cp "$__tool_directory__/config/log4j2.xml" working_dir/config/log4j2.xml 2>> debug_files_upload.txt &&
    cp "$__tool_directory__/jcna-biomrkrs-v06.jar" working_dir/jars/jtool.jar 2>> debug_files_upload.txt &&  
    cp -r "$__tool_directory__/genome/${species}/hg38/"* "working_dir/genome/${species}/hg38" 2>> debug_files_upload.txt && 
    cp -r "$__tool_directory__/python/"* "working_dir/python" 2>> debug_files_upload.txt && 

    { cp "${genomeinfo}" "working_dir/input/${species}/genome.csv" 2>> debug_files_upload.txt &&
    echo "Genome data copy succeeded" >> debug_files_upload.txt; } || { echo "Genome data copy failed" >> debug_files_upload.txt; } &&
    { cp "${parametersinfo}" "working_dir/input/${species}/param.csv" 2>> debug_files_upload.txt &&
    echo "Parameters data copy succeeded" >> debug_files_upload.txt; } || { echo "Parameters data copy failed" >> debug_files_upload.txt; } &&

    echo "inside working directory after copying and extraction:" >> debug_files_upload.txt &&
    ls -lh working_dir >> debug_files_upload.txt &&

    #if $datainfo and $datainfo != "None"
      echo "Data info provided: ${datainfo}." >> debug_files_upload.txt &&
      { cp "${datainfo}" "working_dir/input/${species}/data.csv" 2>> debug_files_upload.txt &&
      echo "Samples data copy succeeded" >> debug_files_upload.txt; } || { echo "Samples data copy failed" >> debug_files_upload.txt; } &&

      bash "$__tool_directory__/run_pipeline_module2to6.sh" \
      -o "working_dir" \
      "input/${species}/genome.csv" \
      "input/${species}/param.csv" \
      "input/${species}/data.csv" \
      "${species}" \
      --chromosome "${chromosomes}" \

    #else
      echo "No data info provided." >> debug_files_upload.txt &&
      bash "$__tool_directory__/run_pipeline_module2to6.sh" \
      -o "working_dir" \
      "input/${species}/genome.csv" \
      "input/${species}/param.csv" \
      "${species}" \
      --chromosome "${chromosomes}" 
    #end if
  ]]></command>


  <inputs>
    <param name="genomeinfo" type="data" format="csv" label="Genome Info CSV" />
    <param name="chromosomes" type="data_collection" label="Chromosome files" format="txt"/>
    <param name="parametersinfo" type="data" format="csv" label="Parameters Info CSV" />
    <param name="datainfo" type="data" format="csv" optional="true" label="Data Info CSV (optional)" />
    <param name="species" type="text" label="Species" optional="false"/>
    <param name="sample_tarball" type="data" format="tar.gz" label="Compressed Sample bam files Directory (.tar.gz)" />
  </inputs>

  <outputs>
    <data name="debug_output" format="txt" label="Debug Output Module2to6" from_work_dir="debug_files_upload.txt"/>
  </outputs>

  <help><![CDATA[
This tool runs **Modules 2–6** of the biomarker discovery pipeline.

### What it does
- Uses BAM files generated by **Module 1**, located in `module2to6/samples/`.
- Uses genome/parameter/configuration CSV files provided by the user.
- Computes KL divergence and CNA composition for a given chromosome.
- Results are written under `module2to6/`.

### Inputs
- **Genome Info CSV**: Genome configuration.
- **Parameters Info CSV**: Pipeline parameters.
- **Data Info CSV** *(optional)*: Sample metadata.
- **Species**: Target species (e.g., human, mouse).
- **Chromosome**: Chromosome to process.

### Outputs
- **KL divergence results**: Stored in `module2to6/KL_output/`.
- **CNA composition results**: Stored in `module2to6/CNA_compositions/`.
  ]]></help>
</tool>
